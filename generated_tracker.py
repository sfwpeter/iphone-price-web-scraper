import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# Define the date range
start_date = "2023-09-01"  # Start date for historical data
end_date = pd.Timestamp.now()  # End date (today)

# Generate a date range with daily frequency
dates = pd.date_range(start=start_date, end=end_date, freq="D")

# Generate a gradual downward trend
np.random.seed(42)  # For reproducibility
base_price = 500  # Starting price
trend = np.linspace(0, -100, len(dates))  # Gradual decrease of $100 over the period
prices = base_price + trend + np.random.normal(0, 10, len(dates))  # Add some noise

# Add occasional outliers (e.g., price spikes or drops)
outlier_indices = np.random.choice(len(dates), size=5, replace=False)  # 5 random outliers
prices[outlier_indices] += np.random.uniform(-50, 50, size=5)  # Add random outliers

# Ensure prices stay within a realistic range (e.g., $290 to $500)
prices = np.clip(prices, 290, 500)

# Create a DataFrame
df = pd.DataFrame({"Timestamp": dates, "Price": prices})

# Save to CSV
df.to_csv("generated_prices.csv", index=False)
print("Simulated historical data saved to 'generated_prices.csv'")

# Function to visualize the data
def visualize_data():
    try:
        df = pd.read_csv("generated_prices.csv")
        df["Timestamp"] = pd.to_datetime(df["Timestamp"])
        sns.lineplot(x="Timestamp", y="Price", data=df)
        plt.title("iPhone 13 Price Over Time (Generated by peterrr)")
        plt.xlabel("Timestamps")
        plt.ylabel("Price in USD($)")
        plt.xticks(rotation=45)
        plt.tight_layout()
        plt.show()
    except FileNotFoundError:
        print("No data to visualize yet.")

# Visualize the data
if __name__ == "__main__":
    visualize_data()